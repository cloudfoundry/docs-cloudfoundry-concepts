---
title: Tanzu User account and Authentication server
owner: Identity
---

This topic tells you about the Tanzu User Account and Authentication (Tanzu UAA) Server, the identity management service for <%= vars.app_runtime_first %>.

The primary role of Tanzu UAA is as an OAuth2 provider, that issues tokens for client apps to use
when they act on behalf of <%= vars.app_runtime_abbr %> users.
In collaboration with the login server, Tanzu UAA can authenticate users with their <%= vars.app_runtime_abbr %> credentials, and can act as an SSO service using those, or other, credentials.

Tanzu UAA has endpoints for managing user accounts, registering OAuth2 clients, and various
other management functions.

Different runtimes and services use separate Tanzu UAA instances. <%= vars.app_runtime_abbr %> has two Tanzu UAA instances by default: one for BOSH Director, used to bootstrap the rest of the <%= vars.app_runtime_abbr %> deployment; and one for the BOSH deployment, used as a shared resource by all apps that require user authentication. This is the minimum number of Tanzu UAA instances <%= vars.app_runtime_abbr %> must have. Other runtimes and services also have Tanzu UAA instances. These instances are separate from each other. If you log into one runtime or service, you are not also logged into other runtimes and services that authenticate using Tanzu UAA.
You must log in to each runtime or service separately.

## <a id='uaa-architecture'></a> Tanzu UAA architecture

The following diagram illustrates the architecture of Tanzu UAA:

![Tanzu UAA architecture](../images/uaa-architecture.png)

The following table describes the protocols Tanzu UAA can use:

| Protocol | Purpose | Profiles |
| -------- | ------- | -------- |
| OAuth 2.0 | Authorizes apps and APIs | Authorization Server, Relying Party |
| OpenID Connect 1.0 | Federates to external identity providers (IDPs) and acts as an IDP for SSO | Identity Provider, Relying Party |
| SAML 2.0 | Federates to external IDPs | Service Provider |
| LDAP | Authenticates users in external user store | LDAP Client |
| SCIM 1.0 | Manages users and groups | Identity Provisioning |


## <a id="client-tools"></a> Client-side tools and libraries

The following table describes the client-side tools and libraries Tanzu UAA uses:

<table>
<thead>
  <tr>
    <th>Name</th>
    <th>Language</th>
  </tr>
</thead>
<tbody>
  <tr>
    <td><a href="https://github.com/cloudfoundry/cf-uaac">UAAC</a><br/>
    <a href="https://github.com/cloudfoundry/cf-uaa-lib">CF-UAA-LIB</a></td>
    <td>Ruby</td>
  </tr>
  <tr>
    <td><a href="http://projects.spring.io/spring-security-oauth/">Spring Security OAuth</a></td>
    <td>Java</td>
  </tr>
  <tr>
    <td><a href="https://github.com/cloudfoundry/cf-java-client">CF Java Client</a></td>
    <td>Java</td>
  </tr>
  <tr>
    <td><a href="https://github.com/cloudfoundry/uaa-singular">UAA Javascript SDK (Singular)</a></td>
    <td>JS</td>
  </tr>
</tbody>
</table>
